name: Run Test Suite

on:
  push:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  COVERAGE_IGOR_VERBOSE: 1
  FORCE_COLOR: 1 # pytest output color

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: "${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"

    continue-on-error: ${{ startsWith(matrix.python-version, '~') }} # Allows unstable Python versions to fail

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        python-version: ["3.9", "3.10", "3.11", "3.x"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          set -xe
          python -m pip install poetry coverage pytest
          python -m poetry install
          python -m poetry self add poetry-plugin-export
          python -m poetry export -f requirements.txt --output requirements.txt
          python -m pip install -r requirements.txt

      - name: Test with pytest
        run: |
          set -xe
          python -m pytest -sv

  check:
    if: always()
    name: Tests Successful
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Whether the whole test suite passed
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
